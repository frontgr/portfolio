import os

from pymongo import MongoClient

from fastapi import FastAPI, Response, status
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel, EmailStr

from aiogram import Bot

bot_token = os.getenv('BOT_TOKEN')
db_uri = os.getenv('DB_URI')

client = MongoClient(db_uri)
db = client.Portfolio

app = FastAPI()
bot = Bot(token=bot_token)

origins = [
    "http://localhost",  
    "http://localhost:8000", 
    "http://127.0.0.1:8000",
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,  
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"]
)

class RequestModel(BaseModel):
    name: str
    phone: str
    email: EmailStr
    type: str
    pageCount: int
    design: bool
    bot: bool
    comment: str

@app.post('/notify')
async def notify(data: RequestModel):
    for id in db.receivers.find():
        await bot.send_message(
            chat_id=id['tg_id'], 
            text=f'''
            –ù–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ üîî\n\n–ò–º—è: {data.name}\n–¢–µ–ª.: {data.phone}\n–ü–æ—á—Ç–∞: {data.email}\n\n–¢–∏–ø –∑–∞–∫–∞–∑–∞: {data.type}\n–ö–æ–ª-–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {data.pageCount}\n–î–∏–∑–∞–π–Ω: {'–î–∞' if data.design else '–ù–µ—Ç'}\n–¢–ì –±–æ—Ç: {'–î–∞' if data.bot else '–ù–µ—Ç'}\n\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: \n{data.comment}
            ''')

    return {'msg': 'The message was sent successfully'}